# Path to database. If blank, will search for
# murmur.sqlite in default locations or create it if not found.
<% unless node['mumble']['mysql'] %>
database=/var/lib/mumble-server/mumble-server.sqlite
<% end %>

# If you wish to use something other than SQLite, you'll need to set the name
# of the database above, and also uncomment the below.
# Sticking with SQLite is strongly recommended, as it's the most well tested
# and by far the fastest solution.
#
<% if node['mumble']['mysql'] %>
database=<%= node['mumble']['mysql']['database']%>
dbDriver=QMYSQL
dbUsername=<%= node['mumble']['mysql']['username'] %>
dbPassword=<%= node['mumble']['mysql']['password'] %>
dbHost=<%= node['mumble']['mysql']['host'] %>
dbPort=<%= node['mumble']['mysql']['port'] %>
dbPrefix=<%= node['mumble']['mysql']['prefix'] %>
dbOpts=<%= node['mumble']['mysql']['opts'] %>
<% else %>
#dbDriver=QMYSQL
#dbUsername=
#dbPassword=
#dbHost=
#dbPort=
#dbPrefix=murmur_
#dbOpts=
<% end %>

# Murmur defaults to not using D-Bus. If you wish to use dbus, which is one of the
# RPC methods available in murmur, please specify so here.
#
dbus=system

# Alternate service name. Only use if you are running distinct
# murmurd processes connected to the same D-Bus daemon.
#dbusservice=net.sourceforge.mumble.murmur

# If you want to use ZeroC Ice to communicate with Murmur, you need
# to specify the endpoint to use. Since there is no authentication
# with ICE, you should only use it if you trust all the users who have
# shell access to your machine.
# Please see the ICE documentation on how to specify endpoints.
ice="tcp -h <%= node['mumble']['ice']['listen_ip'] %> -p <%= node['mumble']['ice']['listen_port'] %>"

# Ice primarily uses local sockets. This means anyone who has a
# user account on your machine can connect to the Ice services.
# You can set a plaintext "secret" on the Ice connection, and
# any script attempting to access must then have this secret
# (as context with name "secret").
# Access is split in read (look only) and write (modify) 
# operations. Write access always includes read access,
# unless read is explicitly denied (see note below).
#
# Note that if this is uncommented and with empty content,
# access will be denied.

icesecretread=<%= node['mumble']['ice']['secretread'] %>
icesecretwrite=<%= node['mumble']['ice']['secretwrite'] %>

# How many login attempts do we tolerate from one IP
# inside a given timeframe before we ban the connection?
# Note that this is global (shared between all virtual servers), and that
# it counts both successfull and unsuccessfull connection attempts.
# Set either Attempts or Timeframe to 0 to disable.
autobanAttempts=<%= node['mumble']['autoban']['attempts'] %>
autobanTimeframe=<%= node['mumble']['autoban']['timeframe'] %>
autobanTime=<%= node['mumble']['autoban']['time'] %>

# Murmur default to logging to murmur.log. If you leave this blank,
# murmur will log to the console (linux) or through message boxes (win32).
logfile=/var/log/mumble-server/mumble-server.log

# If set, murmur will write its process ID to this file.
pidfile=/var/run/mumble-server/mumble-server.pid

# The below will be used as defaults for new configured servers.
# If you're just running one server (the default), it's easier to
# configure it here than through D-Bus or Ice.
#
# Welcome message sent to clients when they connect
welcometext="<%= node['mumble']['welcometext'] %>"

# Port to bind TCP and UDP sockets to
port=<%= node['mumble']['port'] %>

# Specific IP or hostname to bind to.
# If this is left blank (default), murmur will bind to all available addresses.
<% unless node['mumble']['host'] -%>
host=<%= node['mumble']['host'] %>
<% else -%>
host=
<% end -%>

# Password to join server
serverpassword=<%= node['mumble']['serverpassword'] %>

# Maximum bandwidth (in bits per second) clients are allowed
# to send speech at.
bandwidth=<%= node['mumble']['bandwidth'] %>

# Maximum number of concurrent clients allowed.
users=<%= node['mumble']['users'] %>

# Regular expression used to validate channel names
# (note that you have to escape backslashes with \ )
<% unless node['mumble']['channelname'] -%>
channelname=<%= node['mumble']['channelname'] %>
<% else -%>
#channelname=[ \\-=\\w\\#\\[\\]\\{\\}\\(\\)\\@\\|]+
<% end -%>

# Regular expression used to validate user names
# (note that you have to escape backslashes with \ )
<% unless node['mumble']['username'] -%>
username=<%= node['mumble']['username'] %>
<% else -%>
#username=[-=\\w\\[\\]\\{\\}\\(\\)\\@\\|\\.]+
<% end -%>

# Maximum length of text messages in characters. 0 for no limit.
textmessagelength=<%= node['mumble']['textmessagelength'] %>

# Maximum length of text messages in characters, with image data. 0 for no limit.
imagemessagelength=<%= node['mumble']['imagemessagelength'] %>

# Allow clients to use HTML in messages, user comments and channel descriptions?
allowhtml=<%= node['mumble']['allowhtml'] %>

# Murmur retains the per-server log entries in an internal database which
# allows it to be accessed over D-Bus/ICE.
# How many days should such entries be kept?
# Set to 0 to keep forever, or -1 to disable logging to the DB
logdays=<%= node['mumble']['logdays'] %>

# To enable public server registration, the serverpassword must be blank, and
# this must all be filled out.
# The password here is used to create a registry for the server name; subsequent
# updates will need the same password. Don't lose your password.
# The URL is your own website, and only set the registerHostname for static IP
# addresses.
# Only uncomment the 'registerName' parameter if you wish to give your "Root" channel a custom name.
#
registerName=<%= node['mumble']['register_name'] %>
#registerPassword=secret
#registerUrl=http://mumble.sourceforge.net/
#registerHostname=

# To enable bonjour service discovery uncomment the following line.
# To change the name announced by bonjour adjust the registerName variable.
# See http://developer.apple.com/networking/bonjour/index.html for more information
# about bonjour.
#bonjour=True

# If you have a proper SSL certificate, you can provide the filenames here.
# Otherwise, Murmur will create it's own certificate automatically.
<% if node['mumble']['sslCert'] and node['mumble']['sslKey'] -%>
sslCert=<%= node['mumble']['sslCert'] %>
sslKey=<%= node['mumble']['sslKey'] %>
<% else -%>
#sslCert=
#sslKey=
<% end -%>

# If murmur is started as root, which user should it switch to?
# This option is ignored if murmur isn't started with root privileges.
uname=<%= node['mumble']['uname'] %>

# If this options is enabled, only clients which have a certificate are allowed
# to connect.
certrequired=<%= node['mumble']['certrequired'] %>

# You can configure any of the configuration options for Ice here. We recommend
# leave the defaults as they are.
# Please note that this section has to be last in the configuration file.
#
[Ice]
Ice.Warn.UnknownProperties=1
Ice.MessageSizeMax=65536
